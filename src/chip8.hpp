#pragma once

#include <stdint.h>
#include <fstream>
#include <iostream>
#include <random>
#include <memory>
#include <cstring>

class chip8
{
public:
	chip8();
	bool loadROM(const char* fileName);
	void emulate();
	bool getDrawFlag();
	void setDrawFlag(bool flag);
	int getDisplayVal(int i);
	void setKeyValue(int x, int y);
private:
	uint8_t v[16];
	uint8_t ram[4096];
	uint16_t index;
	uint16_t pc;
	uint16_t stack[16];
	uint8_t sp;
	uint8_t delayTimer;
	uint8_t soundTimer;
	uint8_t keys[16];
	uint32_t display[64 * 32];
	uint16_t opcode;

	const unsigned int startAddress = 0x200;
	const unsigned int fontAddress = 0x50;
	bool drawFlag = false;

	std::mt19937 randGen;
	std::uniform_int_distribution<unsigned int> dist;

	static const unsigned int fontSize = 80;

	uint8_t fontset[fontSize] =
	{
		0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
		0x20, 0x60, 0x20, 0x20, 0x70, // 1
		0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
		0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
		0x90, 0x90, 0xF0, 0x10, 0x10, // 4
		0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
		0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
		0xF0, 0x10, 0x20, 0x40, 0x40, // 7
		0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
		0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
		0xF0, 0x90, 0xF0, 0x90, 0x90, // A
		0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
		0xF0, 0x80, 0x80, 0x80, 0xF0, // C
		0xE0, 0x90, 0x90, 0x90, 0xE0, // D
		0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
		0xF0, 0x80, 0xF0, 0x80, 0x80  // F
	};
};